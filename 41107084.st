Object subclass: #Club	instanceVariableNames: 'nombre tarifa tarifaVip recaudacionTotal socios nombresSocios'	classVariableNames: ''	poolDictionaries: ''	category: '41107084'!!Club commentStamp: 'SofiaFeijoo 3/18/2019 10:27' prior: 0!Club is a class that administrates incomes. Public API and Key Messages- establecerNombre, establecerTarifaSocio, establecerTarifaSocioVIP   - recaudacionTotal  Internal Representation and Key Implementation Points.    Instance Variables	nombre:		<Object>	recaudacionTotal:		<Object>	tarifa:		<Object>	tarifaVip:		<Object>    Implementation Points!!Club methodsFor: 'Accessing' stamp: 'SofiaFeijoo 3/20/2019 15:35'!cantidadDeSocios	|cantidad|	cantidad := socios size.		^cantidad! !!Club methodsFor: 'Accessing' stamp: 'SofiaFeijoo 3/18/2019 10:38'!recaudacionTotal	"return the current value of the variable recaudacionTotal"	^ recaudacionTotal ! !!Club methodsFor: 'Accessing' stamp: 'SofiaFeijoo 3/20/2019 18:14'!listaDeSocios	^nombresSocios! !!Club methodsFor: 'Accessing' stamp: 'SofiaFeijoo 3/20/2019 17:07'!cantidadPagadaPor: name	|cantidad|	socios do: [:e | (e recibirNombre = name) ifTrue:[cantidad := e recibirCantPagada]].	^cantidad! !!Club methodsFor: 'initalize' stamp: 'SofiaFeijoo 3/20/2019 18:13'!initialize	"initialize the club instance"	recaudacionTotal := 0.	socios := OrderedCollection new. 	nombresSocios := OrderedCollection new.	! !!Club methodsFor: 'adding' stamp: 'SofiaFeijoo 3/20/2019 18:16'!agregarSocioVIP: socio	socios add: socio.	nombresSocios add: socio recibirNombre.	socio establecerVip: true.! !!Club methodsFor: 'adding' stamp: 'SofiaFeijoo 3/20/2019 18:13'!agregarSocio: socio	socios add: socio.	nombresSocios add: socio recibirNombre.	socio establecerVip: false.! !!Club methodsFor: 'setter' stamp: 'SofiaFeijoo 3/18/2019 10:43'!establecerNombre: name	"set variable nombre"	nombre := name.! !!Club methodsFor: 'setter' stamp: 'SofiaFeijoo 3/18/2019 10:45'!establecerTarifaSocio: tarifaSocio	"set variable tarifa"	tarifa := tarifaSocio.! !!Club methodsFor: 'setter' stamp: 'SofiaFeijoo 3/20/2019 17:09'!establecerTarifaSocioVIP: tarifaSocio	"set variable tarifaVip"	tarifaVip := tarifaSocio.! !!Club methodsFor: 'setter' stamp: 'SofiaFeijoo 3/20/2019 18:23'!recibirPagoDe: name		socios do: [:e | (e recibirNombre = name) ifTrue:[			(e recibirVip) ifTrue:[				recaudacionTotal := recaudacionTotal + tarifaVip.				e establecerCantPagada: tarifaVip] 			ifFalse:[				recaudacionTotal := recaudacionTotal + tarifa.				e establecerCantPagada: tarifa]									]		]! !Object subclass: #Socio	instanceVariableNames: 'nombre esVip cantidadPagada'	classVariableNames: ''	poolDictionaries: ''	category: '41107084'!!Socio commentStamp: 'SofiaFeijoo 3/20/2019 17:57' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two l- (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadPagada:		<Object>	esVip:		<Object>    Implementation Points!!Socio methodsFor: 'setter' stamp: 'SofiaFeijoo 3/20/2019 15:17'!establecerNombre: name	nombre := name.	! !!Socio methodsFor: 'setter' stamp: 'SofiaFeijoo 3/20/2019 16:22'!establecerVip: vip	(vip = true) ifTrue: [esVip := true].	(vip = false) ifTrue: [esVip := false].	! !!Socio methodsFor: 'setter' stamp: 'SofiaFeijoo 3/20/2019 18:22'!establecerCantPagada: pago	cantidadPagada := cantidadPagada + pago.! !!Socio methodsFor: 'accesing' stamp: 'SofiaFeijoo 3/20/2019 16:10'!recibirNombre	^nombre! !!Socio methodsFor: 'accesing' stamp: 'SofiaFeijoo 3/20/2019 17:06'!recibirCantPagada	^cantidadPagada ! !!Socio methodsFor: 'accesing' stamp: 'SofiaFeijoo 3/20/2019 16:27'!recibirVip	^esVip! !!Socio methodsFor: 'initalize' stamp: 'SofiaFeijoo 3/20/2019 16:58'!initialize	cantidadPagada := 0.! !